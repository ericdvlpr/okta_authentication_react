{"version":3,"sources":["components/layouts/Navbar.js","components/pages/Home.js","components/pages/Staff.js","components/auth/SignInWidget.js","components/auth/Login.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","react_router_dom","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","withAuth","_Component","Home","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","authenticated","checkAuthentication","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","props","auth","isAuthenticated","sent","setState","stop","login","_callee2","_context2","logout","_callee3","_context3","inherits","createClass","key","value","_componentDidMount","_callee4","_context4","_componentDidUpdate","_callee5","_context5","mainContent","onClick","Staff","loading","people","fetch","response","json","result","data","map","person","i","name","year","color","pantone_value","SignInWidget","el","ReactDOM","findDOMNode","widget","OktaSignIn","baseUrl","renderEl","onSuccess","onError","remove","Login","res","status","redirect","sessionToken","session","token","err","console","log","_checkAuthentication","react_router","pathname","auth_SignInWidget","onAuthRequired","_ref","history","push","App","dist","issuer","client_id","redirect_uri","window","location","origin","layouts_Navbar","path","exact","component","render","auth_Login","ImplicitCallback","Boolean","hostname","match","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8RAwCeA,mLAnCX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oDACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,eAAeE,GAAG,KAAlC,UAGAL,EAAAC,EAAAC,cAAA,UACEC,UAAU,iBACVG,KAAK,SACLC,cAAY,WACZC,cAAY,aACZC,gBAAc,YACdC,gBAAc,QACdC,aAAW,qBAEXX,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAElBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BS,GAAG,aAC3CZ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,WAAWE,GAAG,KAA9B,QACOL,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAhB,eAGTH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,WAAWE,GAAG,UAA9B,oBA1BOQ,qCCCNC,qBAAQ,SAAAC,GAAA,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAH,IAAAc,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MAEpBQ,MAAQ,CAAEC,cAAe,MAFLhB,EAIpBiB,oBAJoBhB,OAAAiB,EAAA,EAAAjB,CAAAkB,EAAApC,EAAAqC,KAIE,SAAAC,IAAA,IAAAL,EAAA,OAAAG,EAAApC,EAAAuC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACOzB,EAAK0B,MAAMC,KAAKC,kBADvB,QACfZ,EADeO,EAAAM,QAEC7B,EAAKe,MAAMC,eAC/BhB,EAAK8B,SAAS,CAAEd,kBAHG,wBAAAO,EAAAQ,SAAAV,MAJFrB,EAmBpBgC,MAnBoB/B,OAAAiB,EAAA,EAAAjB,CAAAkB,EAAApC,EAAAqC,KAmBZ,SAAAa,IAAA,OAAAd,EAAApC,EAAAuC,KAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAAT,MAAA,OACPzB,EAAK0B,MAAMC,KAAKK,MAAM,KADf,wBAAAE,EAAAH,SAAAE,MAnBYjC,EAuBrBmC,OAvBqBlC,OAAAiB,EAAA,EAAAjB,CAAAkB,EAAApC,EAAAqC,KAuBZ,SAAAgB,IAAA,OAAAjB,EAAApC,EAAAuC,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,OACPzB,EAAK0B,MAAMC,KAAKQ,OAAO,KADhB,wBAAAE,EAAAN,SAAAK,MAvBYpC,EAAA,OAAAC,OAAAqC,EAAA,EAAArC,CAAAH,EAAAD,GAAAI,OAAAsC,EAAA,EAAAtC,CAAAH,EAAA,EAAA0C,IAAA,oBAAAC,MAAA,eAAAC,EAAAzC,OAAAiB,EAAA,EAAAjB,CAAAkB,EAAApC,EAAAqC,KAAA,SAAAuB,IAAA,OAAAxB,EAAApC,EAAAuC,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,OAYnBtB,KAAKc,sBAZc,wBAAA2B,EAAAb,SAAAY,EAAAxC,SAAA,yBAAAuC,EAAA7B,MAAAV,KAAAE,YAAA,KAAAmC,IAAA,qBAAAC,MAAA,eAAAI,EAAA5C,OAAAiB,EAAA,EAAAjB,CAAAkB,EAAApC,EAAAqC,KAAA,SAAA0B,IAAA,OAAA3B,EAAApC,EAAAuC,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,OAgBnBtB,KAAKc,sBAhBc,wBAAA8B,EAAAhB,SAAAe,EAAA3C,SAAA,yBAAA0C,EAAAhC,MAAAV,KAAAE,YAAA,KAAAmC,IAAA,SAAAC,MAAA,WA4BnB,GAAiC,OAA7BtC,KAAKY,MAAMC,cAAwB,OAAO,KAE9C,IAAMgC,EAAc7C,KAAKY,MAAMC,cAC3BlC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,sCAAuDH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,UAAT,eACvDL,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuBgE,QAAS9C,KAAKgC,QAAvD,WAGJrD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,kEACAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBAAsBgE,QAAS9C,KAAK6B,OAAtD,UAGN,OACElD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,UACC+D,OA5CclD,EAAA,CACFH,cCiCNuD,6MAnCbnC,MAAQ,CACNoC,SAAS,EACTC,OAAQ,6MAII,uCACWC,MADX,6CACNC,kBACeA,EAASC,cAAxBC,SACNrD,KAAK2B,SAAS,CAAEsB,OAAQI,EAAOC,KAAMN,SAAS,uIAI9C,OACErE,EAAAC,EAAAC,cAAA,WACGmB,KAAKY,MAAMoC,UAAYhD,KAAKY,MAAMqC,OACjCtE,EAAAC,EAAAC,cAAA,yBAEAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACGmB,KAAKY,MAAMqC,OAAOM,IAAI,SAACC,EAAQC,GAAT,OACrB9E,EAAAC,EAAAC,cAAA,MAAIwD,IAAKmB,EAAOE,KAAOF,EAAOG,MAA9B,SACSH,EAAOE,KADhB,UAC6BF,EAAOG,KADpC,YACmD,IAChDH,EAAOI,MAFV,qBAEmCJ,EAAOK,kBAI9ClF,EAAAC,EAAAC,cAAA,qBA5BQW,+BCqBLsE,sMAhBX,IAAMC,EAAKC,IAASC,YAAYjE,MAChCA,KAAKkE,OAAS,IAAIC,IAAW,CAC3BC,QAASpE,KAAKuB,MAAM6C,UAEtBpE,KAAKkE,OAAOG,SAAS,CAAEN,MAAM/D,KAAKuB,MAAM+C,UAAWtE,KAAKuB,MAAMgD,wDAI9DvE,KAAKkE,OAAOM,0CAIZ,OAAO7F,EAAAC,EAAAC,cAAA,mBAdgBW,cCAZC,qBAAQ,SAAAC,GACrB,SAAA+E,EAAYlD,GAAO,IAAA1B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyE,IACjB5E,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,KAAAF,OAAAU,EAAA,EAAAV,CAAA2E,GAAAhE,KAAAT,KAAMuB,KAkBR+C,UAAY,SAACI,GACX,GAAmB,YAAfA,EAAIC,OACN,OAAO9E,EAAK0B,MAAMC,KAAKoD,SAAS,CAC9BC,aAAcH,EAAII,QAAQC,SAtBblF,EA+BnB0E,QAAU,SAACS,GACTC,QAAQC,IAAI,mBAAoBF,IA9BhCnF,EAAKe,MAAQ,CACXC,cAAe,MAEjBhB,EAAKiB,sBALYjB,EADE,OAAAC,OAAAqC,EAAA,EAAArC,CAAA2E,EAAA/E,GAAAI,OAAAsC,EAAA,EAAAtC,CAAA2E,EAAA,EAAApC,IAAA,sBAAAC,MAAA,eAAA6C,EAAArF,OAAAiB,EAAA,EAAAjB,CAAAkB,EAAApC,EAAAqC,KAAA,SAAAC,IAAA,IAAAL,EAAA,OAAAG,EAAApC,EAAAuC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAUStB,KAAKuB,MAAMC,KAAKC,kBAVzB,QAUbZ,EAVaO,EAAAM,QAWG1B,KAAKY,MAAMC,eAC/Bb,KAAK2B,SAAS,CAAEd,kBAZC,wBAAAO,EAAAQ,SAAAV,EAAAlB,SAAA,yBAAAmF,EAAAzE,MAAAV,KAAAE,YAAA,KAAAmC,IAAA,qBAAAC,MAAA,WAiBnBtC,KAAKc,wBAjBc,CAAAuB,IAAA,SAAAC,MAAA,WAqCnB,OAAiC,OAA7BtC,KAAKY,MAAMC,cAA+B,KACvCb,KAAKY,MAAMC,cAChBlC,EAAAC,EAAAC,cAACuG,EAAA,SAAD,CAAUpG,GAAI,CAAEqG,SAAU,OAC1B1G,EAAAC,EAAAC,cAACyG,EAAD,CACElB,QAASpE,KAAKuB,MAAM6C,QACpBE,UAAWtE,KAAKsE,UAChBC,QAASvE,KAAKuE,cA3CCE,EAAA,CAAqBjF,qBCI5C,SAAS+F,EAATC,GAAqCA,EAAXC,QAChBC,KAAK,cA+BAC,mLA1BX,OACEhH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAC+G,EAAA,SAAD,CACEC,OAAO,6CACPC,UAAU,uBACVC,aAAcC,OAAOC,SAASC,OAAS,qBACvCX,eAAgBA,GAEhB5G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACsH,EAAD,MACAxH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACuG,EAAA,MAAD,CAAOgB,KAAK,IAAIC,OAAO,EAAMC,UAAW3G,IACxChB,EAAAC,EAAAC,cAAC+G,EAAA,YAAD,CAAaQ,KAAK,SAASC,OAAO,EAAMC,UAAWvD,IACnDpE,EAAAC,EAAAC,cAACuG,EAAA,MAAD,CACEgB,KAAK,SACLG,OAAQ,kBAAM5H,EAAAC,EAAAC,cAAC2H,EAAD,CAAOpC,QAAQ,oCAE/BzF,EAAAC,EAAAC,cAACuG,EAAA,MAAD,CAAOgB,KAAK,qBAAqBE,UAAWG,gCAnBxCjH,aCDEkH,QACW,cAA7BV,OAAOC,SAASU,UAEe,UAA7BX,OAAOC,SAASU,UAEhBX,OAAOC,SAASU,SAASC,MACvB,2DCZN5C,IAASuC,OAAO5H,EAAAC,EAAAC,cAACgI,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.6918c9ee.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-4\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          Portal\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item active\">\r\n              <Link className=\"nav-link\" to=\"/\">\r\n                Home <span className=\"sr-only\">(current)</span>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/staff\">\r\n                Staff\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { withAuth } from '@okta/okta-react';\r\n\r\nexport default withAuth(\r\n  class Home extends Component {\r\n   state = { authenticated: null };\r\n\r\n   checkAuthentication = async() => {\r\n    const authenticated = await this.props.auth.isAuthenticated();\r\n    if (authenticated !== this.state.authenticated) {\r\n      this.setState({ authenticated });\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.checkAuthentication();\r\n  }\r\n\r\n  async componentDidUpdate() {\r\n    this.checkAuthentication();\r\n  }\r\n\r\n   login = async() => {\r\n    this.props.auth.login('/');\r\n  }\r\n\r\n  logout = async() => {\r\n    this.props.auth.logout('/');\r\n  }\r\n\r\n  render() {\r\n    if (this.state.authenticated === null) return null;\r\n\r\n    const mainContent = this.state.authenticated ?\r\n        <div>\r\n          <p className=\"lead\">You have entered the staff portal, <Link to=\"/staff\">Click Here</Link></p>\r\n          <button className=\"btn btn-light btn-lg\" onClick={this.logout}>Logout</button> \r\n        </div>\r\n      :\r\n      <div>\r\n          <p className=\"lead\">If you are a staff, get your credentials from your supervisor </p>\r\n          <button className=\"btn btn-dark btn-lg\" onClick={this.login}>Login</button> \r\n        </div>\r\n\r\n    return (\r\n      <div className=\"jumbotron\">\r\n        <h1 className=\"display-4\">Portal</h1>\r\n        {mainContent}\r\n      </div>\r\n    );\r\n  }\r\n});","import React, { Component } from \"react\";\r\n\r\nclass Staff extends Component {\r\n  state = {\r\n    loading: true,\r\n    people: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const url = \"https://reqres.in/api/login\";\r\n    const response = await fetch(url);\r\n    const result = await response.json();\r\n    this.setState({ people: result.data, loading: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.loading || !this.state.people ? (\r\n          <div>loading...</div>\r\n        ) : (\r\n          <div>\r\n            <ul>\r\n              {this.state.people.map((person, i) => (\r\n                <li key={person.name + person.year}>\r\n                  Name: {person.name} Year: {person.year} | Color:{\" \"}\r\n                  {person.color} | Pantone value: {person.pantone_value}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <div />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Staff;\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport OktaSignIn from '@okta/okta-signin-widget';\r\nimport '@okta/okta-signin-widget/dist/css/okta-sign-in.min.css';\r\n\r\nclass SignInWidget extends Component {\r\n  componentDidMount() {\r\n    const el = ReactDOM.findDOMNode(this);\r\n    this.widget = new OktaSignIn({\r\n      baseUrl: this.props.baseUrl\r\n    });\r\n    this.widget.renderEl({ el }, this.props.onSuccess, this.props.onError);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.widget.remove();\r\n  }\r\n\r\n  render() {\r\n    return <div />;\r\n  }\r\n}\r\n\r\nexport default SignInWidget;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport SignInWidget from './SignInWidget';\r\nimport { withAuth } from '@okta/okta-react';\r\n\r\nexport default withAuth(class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      authenticated: null\r\n    };\r\n    this.checkAuthentication();\r\n  }\r\n\r\n  async checkAuthentication() {\r\n    const authenticated = await this.props.auth.isAuthenticated();\r\n    if (authenticated !== this.state.authenticated) {\r\n      this.setState({ authenticated });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.checkAuthentication();\r\n  }\r\n\r\n  onSuccess = (res) => {\r\n    if (res.status === 'SUCCESS') {\r\n      return this.props.auth.redirect({\r\n        sessionToken: res.session.token\r\n      });\r\n   } else {\r\n    // The user can be in another authentication state that requires further action.\r\n    // For more information about these states, see:\r\n    //   https://github.com/okta/okta-signin-widget#rendereloptions-success-error\r\n    }\r\n  }\r\n\r\n  onError = (err) => {\r\n    console.log('error logging in', err);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.authenticated === null) return null;\r\n    return this.state.authenticated ?\r\n      <Redirect to={{ pathname: '/' }}/> :\r\n      <SignInWidget\r\n        baseUrl={this.props.baseUrl}\r\n        onSuccess={this.onSuccess}\r\n        onError={this.onError}/>;\r\n  }\r\n});","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { Security, SecureRoute, ImplicitCallback } from \"@okta/okta-react\";\r\nimport Navbar from \"./components/layouts/Navbar\";\r\nimport Home from \"./components/pages/Home\";\r\nimport Staff from \"./components/pages/Staff\";\r\nimport Login from \"./components/auth/Login\";\r\nimport \"./App.css\";\r\n\r\nfunction onAuthRequired({ history }) {\r\n  history.push(\"/login\");\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Security\r\n          issuer=\"https://dev-387172.okta.com/oauth2/default\"\r\n          client_id=\"0oawwzni2ivAyDAWJ356\"\r\n          redirect_uri={window.location.origin + \"/implicit/callback\"}\r\n          onAuthRequired={onAuthRequired}\r\n        >\r\n          <div className=\"App\">\r\n            <Navbar />\r\n            <div className=\"container\">\r\n              <Route path=\"/\" exact={true} component={Home} />\r\n              <SecureRoute path=\"/staff\" exact={true} component={Staff} />\r\n              <Route\r\n                path=\"/login\"\r\n                render={() => <Login baseUrl=\"https://dev-387172.okta.com/\" />}\r\n              />\r\n              <Route path=\"/implicit/callback\" component={ImplicitCallback} />\r\n            </div>\r\n          </div>\r\n        </Security>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}